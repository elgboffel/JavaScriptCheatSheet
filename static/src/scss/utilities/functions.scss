@import "./screensizes";


/// Replace `$search` with `$replace` in `$string`
///
/// @group mixins and tools
/// @author Hugo Giraudel
/// @param {string} $string - Initial string
/// @param {string} $search - Substring to replace
/// @param {string} $replace [""] - New value
/// @returns {string} - Updated string
@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}


/// Get a breakpoint's size from its name.
///
/// @group mixins and tools
/// @access private
/// @returns {string|boolean} - Breakpoint size if it exists, otherwise **false**
@function get-breakpoint($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @return inspect(map-get($breakpoints, $breakpoint));
    }

    @else {
        @warn "No value found for `#{$breakpoint}`. Please make sure it is defined in the `$breakpoints` map.";
        @return false;
    }
}


/// Get a screen size from its name.
///
/// @group mixins and tools
/// @returns {string} - Screen size if it exists, otherwise **false**
///
/// @example min-width: get-screen-size(md);
/// @example @media (max-width: get-screen-size(md) - 1px) { ... }
@function get-screen-size($screenSizeName) {
    @if map-has-key($screensizes, $screenSizeName) {
        @return map-get($screensizes, $screenSizeName);
    }

    @else {
        @warn "No value found for `#{$screenSizeName}`. Please make sure it is defined in the `$screensizes` map.";
        @return false;
    }
}
